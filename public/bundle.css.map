{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/WebSite.svelte",
    "../src/components/About.svexy",
    "../src/components/Page.svelte",
    "../src/components/Index.svexy",
    "../src/components/Logo.svelte",
    "../src/components/Sidebar.svelte",
    "../src/components/NavBar.svelte",
    "../src/components/Footer.svelte",
    "../src/components/BlogPosts.svelte",
    "../src/components/Dropdown.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\n  <title>{$info.siteName + $seo.addTitle}</title>\n  <link rel='icon' type='image/png' href='/imgs/favicon.png'>\n  <meta name=\"robots\" content=\"{$seo.robot}\">\n  <meta name=\"description\" content=\"{$seo.description}\">\n</svelte:head>\n\n<svelte:window on:resize={winResize} bind:innerWidth={winWidth} />\n\n<div id='page' style=\"background-color: {$info.styles.backgroundColor};\n                      font: {$info.styles.font};\">\n  <header style=\"background-color: {$info.styles.divColor}; \n                 background-image: {$info.styles.headerBackgroundPicture}; \n                 border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                 border-radius: {$info.styles.borderRadius};\n                 color: {$info.styles.textColor}; \n                 font: {$info.styles.headerFont};\">\n    {#if showLogo }\n      <Logo />\n    {/if}\n    <div id='title' style=\"width: {showLogo ? 'auto' : '100%'};\">\n      <h1>{$info.siteName}</h1>\n      <h3>{$info.byLine}</h3>\n    </div>\n    <div id='spacer'>\n    </div>\n  </header>\n  <NavBar />\n  <div id='main' >\n    {#if $info.styles.sideBarLeft && $showSidebar}\n      <Sidebar />\n    {/if}\n    <Router {routes} />\n    {#if !$info.styles.sideBarLeft && $showSidebar}\n      <Sidebar />\n    {/if}\n  </div>\n  <Footer />\n</div>\n\n<style>\n  :global(body) {\n    display: flex;\n    flex-direction: column;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  :global(a.active) {\n    color: #155393 !important;\n    text-decoration-color: #155393 !important;\n  }\n\n  header {\n    display: flex;\n    flex-direction: row;\n    width: 85%;\n    margin: auto;\n    padding: 10px;\n    flex-shrink: 0;\n  }\n\n  Router {\n    margin: 0px;\n    padding: 0px;\n  }\n\n  #spacer {\n    width: 150px;\n    padding: 0px;\n    margin: 0px;\n  }\n\n  #title {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    align-content: center;\n    flex-shrink: 0;\n }\n\n  #logo {\n    width: 100px;\n    height: 100px;\n  }\n\n  #page {\n    display: flex;\n    flex-direction: column;\n    margin: 0px;\n    padding: 15px;\n  }\n\n  #main {\n    display: flex;\n    flex-direction: row;\n    width: 87%;\n    align-content: center;\n    margin: auto;\n    padding: 0px;\n }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import About from './components/About.svexy';\n  import Index from './components/Index.svexy';\n  import Page from './components/Page.svelte';\n  import Logo from './components/Logo.svelte';\n  import Sidebar from './components/Sidebar.svelte';\n  import NavBar from './components/NavBar.svelte';\n  import Footer from './components/Footer.svelte';\n  import { info } from './store/infoStore.js';\n  import { seo } from './store/SEOstore.js';\n  import { showSidebar } from './store/showSidebar.js';\n  import { showNavbar } from './store/showNavbar.js';\n  import Router, { link } from 'svelte-spa-router';\n  import active from 'svelte-spa-router/active';\n\n  const routes = {\n    //\n    // Exact path to the index and about pages. I want these\n    // to be fast, so they are preloaded with everything else.\n    //\n    '/': Index,\n\n    //\n    // Catch-all\n    // This is optional, but if present it must be the last\n    //\n    // If not caught otherwise, it must be a markdown file\n    // on the file system. You can encapsulate the Page inside\n    // your own for more customizations.\n    //\n    '*': Page\n  }\n\n  let winWidth = 0;\n  let showLogo = false;\n  let savedInfo = {};\n  \n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      savedInfo = value;\n      document.body.style.backgroundColor = value.styles.backgroundColor;\n      showLogo = value.styles.showlogo;\n      winResize({});\n    });\n\n    const unsubscribeSEO = seo.subscribe((value) => {\n    });\n\n    return () => {\n      unsubsribeInfo();\n      unsubscribeSEO();\n    };\n  });\n\n  function winResize(e) {\n    //\n    // Determine if we will show the sidebar or not.\n    //\n    if(savedInfo.styles.showSideBar && (winWidth > savedInfo.styles.widthSidebar)) {\n      showSidebar.set(true);\n    } else {\n      showSidebar.set(false);\n    }\n\n    //\n    // Determine to show the logo or not.\n    //\n    if((winWidth < savedInfo.styles.widthLogo)||(!savedInfo.styles.showlogo)) {\n      showLogo = false;\n    } else {\n      showLogo = true;\n    }\n\n    //\n    // Determine if we show the navigation bar or not.\n    //\n    if(winWidth < savedInfo.styles.widthNavbar) {\n      showNavbar.set(false);\n    } else {\n      showNavbar.set(true);\n    }\n  }\n</script>\n\n",
    "<div class=\"box\" style=\"border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                        border-radius: {$info.styles.borderRadius}; \n                        background-color: {$info.styles.divColor};\n                        background-image: {$info.styles.divBackgroundPicture};\n                        color: {$info.styles.textColor};\" in:fade=\"{{duration: 500}}\">\n<h2>About Us</h2>\n<p>This is a markdown file with information about you. Change as\nyou see fit.</p>\n<p>The <code>div</code> setup the proper styling for the markdown and controls\nthe animation of it on the site. Thereore, leave the div information\nas it is and just change the markdown inbetween.</p>\n</div>\n\n<script>\n  import { fade } from 'svelte/transition';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n    });\n    \n    return () => { unsubscribeInfo(); };\n  });\n\n\n\n</script>\n<style>\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n</style>",
    "{#await lastPromise}\n  <content in:fade=\"{{duration: 500}}\" style=\"width: {$showSidebar ? '70%' : '100%'}; \n                                              border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                                              border-radius: {$info.styles.borderRadius};\n                                              background-color: {$info.styles.divColor};\n                                              background-image: {$info.styles.divBackgroundPicture};\n                                              color: {$info.styles.textColor};\" >\n    <h2>Loading Partials...</h2>\n  </content>\n{:then dt}\n  {#await firstPromise}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {$showSidebar ? '70%' : '100%'}; \n                                                border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                                                border-radius: {$info.styles.borderRadius};\n                                                background-color: {$info.styles.divColor};\n                                                background-image: {$info.styles.divBackgroundPicture};\n                                                color: {$info.styles.textColor};\" >\n      <h2 id='waiting'>Loading page...</h2>\n    </content>\n  {:then data}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {$showSidebar ? '70%' : '100%'}; \n                                                border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                                                border-radius: {$info.styles.borderRadius};\n                                                background-color: {$info.styles.divColor};\n                                                background-image: {$info.styles.divBackgroundPicture};\n                                                color: {$info.styles.textColor};\" >\n      {@html processData(data)}\n    </content>\n  {:catch e}\n    <content in:fade=\"{{duration: 500}}\" style=\"width: {$showSidebar ? '70%' : '100%'};\n                                                border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                                                border-radius: {$info.styles.borderRadius};\n                                                background-color: {$info.styles.divColor}; \n                                                background-image: {$info.styles.divBackgroundPicture};\n                                                color: {$info.styles.textColor};\" >     \n      {@html errorPage}\n    </content>\n  {/await}\n{:catch e}\n  <content in:fade=\"{{duration: 500}}\" style=\"width: {$info.$showSidebar ? '70%' : '100%'};\n                                              border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                                              border-radius: {$info.styles.borderRadius};\n                                              background-color: {$info.styles.divColor};\n                                              background-image: {$info.styles.divBackgroundPicture};\n                                              color: {$info.styles.textColor};\" >     \n    {@html errorPage}\n  </content>\n{/await}\n\n<style>\n  content {\n    margin: 10px 0px;\n    padding: 10px;\n    flex-shrink: 1;\n  }\n\n  #waiting {\n    height: 100%;\n    width: 100%;\n    min-height: 200px;\n    margin: auto;\n  }\n\n  code {\n    overflow: auto;\n  }\n\n  .alert {\n    background-color: red;\n    color: black;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import showdown from 'showdown';\n  import showdownHighlight from \"showdown-highlight\";\n  import {location, querystring} from 'svelte-spa-router';\n  import { get } from 'svelte/store';\n  import { fade } from 'svelte/transition';\n  import { info } from '../store/infoStore.js';\n  import { showSidebar } from '../store/showSidebar.js';\n\n  let converter = null;\n  let firstPromise;\n  let errorPage = '';\n  let parts = [];\n  let site = {};\n  let lastPromise;\n\n  async function fetchPage(pg) {\n    if(pg !== null) {\n      var address = '';\n      if(site.local) {\n        address = site.address;\n      } else {\n        address = site.GitHub;\n      }\n      const response = await fetch(address + '/site' + pg + \".md\");\n      const text = await response.text();\n      if(response.ok && (response.status === 200)) {\n        if(((text[0] !== '-')&&(text[0] !== '+'))||(text[0] == '<')) {\n          //\n          // It's not a proper header. Treat as an error.\n          //\n          return errorPage\n        } else {\n          return text;\n        }\n      } else {\n        return errorPage\n      }\n    } else {\n      //\n      // I have to return a promise, let's just load a page from \n      // anywhere.\n      //\n      const res = await fetch(`https://svelte.dev/tutorial/random-number`);\n      const text = await res.text();\n\n      if (res.ok) {\n        return text;\n      } else {\n        throw new Error(text);\n      }\n    }\n  }\n\n  onMount(() => {\n    showdown.setFlavor('github');\n    showdown.setOption('simpleLineBreaks',false);\n\n    converter = new showdown.Converter({\n      extensions: [showdownHighlight]\n    });\n\n    //\n    // Create the helpers functions for Handlebars.\n    //\n    window.Handlebars.registerHelper('save', function(name, text) {\n      window.Handlebars.registerHelper(name, function() {\n        return text;\n      });\n      return text;\n    });\n\n    window.Handlebars.registerHelper('date', function(dFormat) {\n      return window.moment().format(dFormat);\n    });\n\n    window.Handlebars.registerHelper('cdate', function(cTime, dFormat, options) {\n      if(options.data.root.indexOf(cTime) >= 0) {\n        cTime = options.root[cTime];\n      }\n      return window.moment(cTime).format(dFormat);\n    });\n\n    window.Handlebars.registerHelper('last', function(weeks, dow, fmat) {\n      return window.moment().add(-7 * weeks, 'd').day(dow).format(fmat);\n    });\n\n    window.Handlebars.registerHelper('next', function(weeks, dow, fmat) {\n      return window.moment().add(7 * weeks, 'd').day(dow).format(fmat);\n    });\n\n    //\n    // Setup the location store to update the page when the location changes.\n    // This is done by setting a new promise in the promise variable for retrieving\n    // the new page information.\n    //\n    const unsubscribeInfo = info.subscribe(value => {\n      site = value;\n    });\n\n    const unsubscribeLocation = location.subscribe(value => {\n      firstPromise = fetchPage(value);\n    });\n\n    const unsubscribeshowSidebar = showSidebar.subscribe(value => {\n    });\n\n    lastPromise = getPartials();\n    return () => { \n      unsubscribeshowSidebar(); \n      unsubscribeInfo(); \n      unsubscribeLocation();\n    };\n  });\n\n  async function getPartials() {\n    //\n    // Get some error page.\n    //\n    var st = get(info);\n    var address = '';\n    if(st.local) {\n      address = st.address;\n    } else {\n      address = st.GitHub;\n    }\n    var rep = await fetch(address + '/site/404.md');\n    var errorPageOrig = await rep.text();\n    errorPage = processData(errorPageOrig);\n\n    //\n    // Get the parts pages.\n    //\n    var lastPromise = null;\n    for(var pg of st.parts) {\n      var rep = await fetch(address + '/site/parts/' + pg);\n      var partial = await rep.text();\n      lastPromise = partial;\n      window.Handlebars.registerPartial(pg, partial);\n    }\n\n    return lastPromise;\n  }\n\n  function processData(data) {\n    var result = '';\n    \n    //\n    // This should never happen but if it does, then reload.\n    //\n    if((typeof data === 'undefined')||(data == null)) return '';\n    \n    if(data[0] === '<') {\n      return data;\n    }\n\n    //\n    // There are two types of front matter: delimited by three '-' and using a colon,\n    // and delimited by three '+' and using an '='. This should catch both types.\n    //\n    // TODO: Maybe add json frontmatter processing?\n    //\n    let fmregexp = new RegExp(/(\\-\\-\\-)|(\\+\\+\\+)/);\n\n    //\n    // Remove the front matter and process it.\n    //\n    data = data.toString().split('\\n');\n    var fmatter = false;\n    var fm = [];\n    var body = [];\n\n    //\n    // Since we are able to turn on and off the frontmatter\n    // processing, we need to make sure it's not changed more\n    // than twice. If so, everything else is just body.\n    //\n    var count = 0;\n    for(var i = 0; i < data.length; i++) {\n      if(fmregexp.test(data[i])) {\n        if(fmatter) i++;\n        fmatter = !fmatter;\n        count++;\n      }\n      if(fmatter && (count < 2)) {\n        fm.push(data[i]);\n      } else {\n        body.push(data[i]);\n      }\n    }\n\n    //\n    // Create the data for Handlebars.\n    //\n    var hdata = [];\n    hdata[\"cDateMDY\"] = window.moment().format(\"MMMM DD, YYYY\");\n    hdata[\"cDateDMY\"] = window.moment().format(\"DD MMMM YYYY\");\n    hdata[\"cDateDOWDMY\"] = window.moment().format(\"dddd, DD MMMM YYYY\");\n    hdata[\"cDateDOWMDY\"] = window.moment().format(\"dddd MMMM DD, YYYY\");\n    hdata[\"cDay\"] = window.moment().format(\"DD\");\n    hdata[\"cMonth\"] = window.moment().format(\"MMMM\");\n    hdata[\"cYear\"] = window.moment().format(\"YYYY\");\n    hdata[\"cMonthShort\"] = window.moment().format(\"MMM\");\n    hdata[\"cYearShort\"] = window.moment().format(\"YY\");\n    hdata[\"cDOW\"] = window.moment().format(\"dddd\");\n    hdata[\"cMDthYShort\"] = window.moment().format(\"MMM Do YY\");\n    hdata[\"cMDthY\"] = window.moment().format(\"MMMM Do YYYY\");\n    hdata[\"cHMSampm\"] = window.moment().format(\"h:mm:ss a\");\n    hdata[\"cHMampm\"] = window.moment().format(\"h:mm a\");\n    hdata[\"cHMS24\"] = window.moment().format(\"H:mm:ss\");\n    hdata[\"cHM24\"] = window.moment().format(\"H:mm\");\n\n    //\n    // Add the front matter to the Handlebar's data.\n    //\n    for(var i = 1; i < fm.length;i++) {\n      var parts = fm[i].split(' = ');\n      if(parts.length < 2) parts = fm[i].split(': ');\n      if(parts.length > 2) parts[1] = parts.slice(2);\n      var item = unescape(parts[1]).trim();\n\n      //\n      // Sometimes, the front matter has quotes. Let's remove them\n      // automatically so I don't need to change everything.\n      //\n      if(item[0] === '\"') item = item.slice(1,-1);\n\n      //\n      // Set the frontmater into the data array for Handlebars\n      // to use.\n      //\n      hdata[parts[0].trim()] = item;\n    }\n\n    //\n    // Add the information from the info store.\n    //\n    const linfo = get(info);\n    for(var key of Object.keys(linfo)) {\n      hdata[key] = linfo[key];\n    }\n\n    //\n    // Run the body through Handlebars.\n    //\n    var bodyTemplate = window.Handlebars.compile(body.join('\\n'));\n    var trying = true;\n    var newBody = '';\n\n    //\n    // If the partials are called before loaded, running the template will throw\n    // an error. Catch it and tell the user to move to another page and back.\n    //\n    try {\n      newBody = bodyTemplate(hdata);\n    } catch(e) {\n      newBody = \"<h1>Page not ready...</h1><p>Please don't reload this page. Go to another markdown page and come back.</p>\";\n    }\n\n    //\n    // Convert the data given to HTML.\n    //\n    if(converter != null) {\n      result = converter.makeHtml(newBody);\n    }\n\n    //\n    // Return the results.\n    //\n    return result;\n  }\n</script>\n",
    "<div class=\"box\" style=\"background-color: {$info.styles.divColor}; \n                        background-image: {$info.styles.divBackgroundPicture}; \n                        color: {$info.styles.textColor}; border: {$info.styles.borderSize} solid {$info.styles.borderColor};\n                        border-radius: {$info.styles.borderRadius};\" in:fade=\"{{duration: 500}}\">\nRethinking the menu. We are coming soon.\n</div>\n\n<script>\n  import { fade } from 'svelte/transition';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n\n</script>\n<style>\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n  .box {\n    width: 100%;\n    margin: auto;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n</style>",
    "<svg viewBox=\"0 0 100 81\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n  <g transform=\"matrix(1.53154,0,0,1.53154,1.70555,21.8629)\">\n    <text x=\"-5px\" y=\"24px\" style=\"font-family:'Athelas-Regular', 'Athelas';font-size:36px;\">Logo</text>\n  </g>\n</svg>\n\n<style>\n  svg {\n    margin: auto;\n    flex-shrink: 0;\n    width: 150px;\n    height: 100px;\n  }\n</style>\n",
    "{#if $info.styles.showSideBar && !$info.styles.sideBarLeft}\n<div id='sidebar' style=\"margin-right: 0px; \n                         margin-left: 10px; \n                         background-color: {$info.styles.divColor}; \n                         background-image: {$info.styles.divBackgroundPicture}; \n                         border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                         border-radius: {$info.styles.borderRadius}; \n                         color: {$info.styles.textColor};\"> \n  <Twitter>\n    <p>Put the line you get from Twitter for your news here.</p>\n  </Twitter>\n  <BlogPosts />\n</div>\n{/if}\n\n{#if $info.styles.showSideBar && $info.styles.sideBarLeft}\n<div id='sidebar' style=\"margin-right: 10px; \n                        margin-left: 0px; \n                        background-color: {$info.styles.divColor}; \n                        background-image: {$info.styles.divBackgroundPicture}; \n                        border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                        border-radius: {$info.styles.borderRadius}; \n                        color: {$info.styles.textColor};\">\n  <Twitter>\n    <p>Put the line you get from Twitter for your news here.</p>\n  </Twitter>\n  <BlogPosts />\n</div>\n{/if}\n\n<style>\n  #sidebar {\n    width: 30%;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  import Twitter from './Twitter.svelte';\n  import BlogPosts from './BlogPosts.svelte';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n</script>\n",
    "<div id='navbar' style=\"background-color: {$info.styles.divColor}; \n                        background-image: {$info.styles.divbackgroundPicture}; \n                        border: {$info.styles.borderSize} solid {$info.styles.borderColor}; \n                        border-radius: {$info.styles.borderRadius}; \n                        color: {$info.styles.textColor};\n                        flex-direction: {$showNavbar ? 'row' : 'column'}; \n                        font-size: {$info.styles.navFontSize};\" >\n  <a href='/' style=\"color: {$info.styles.textColor};\" on:mouseover={hoverAction} on:mouseout={hoverAction} use:link use:active>Home</a>\n  <Dropdown name='Themes'>\n    <a href='/#' style=\"color: {$info.styles.textColor};\" on:mouseover={hoverAction} on:mouseout={hoverAction} on:click|preventDefault={(e) => {changeTheme('dark');}}>Dark</a>\n    <a href='/#' style=\"color: {$info.styles.textColor};\" on:mouseover={hoverAction} on:mouseout={hoverAction} on:click|preventDefault={(e) => {changeTheme('light');}}>Light</a>\n    <a href='/#' style=\"color: {$info.styles.textColor};\" on:mouseover={hoverAction} on:mouseout={hoverAction} on:click|preventDefault={(e) => {changeTheme('brown');}}>Brown</a>\n </Dropdown>\n</div>\n\n<style>\n  #navbar {\n    display: flex;\n    width: 85%;\n    margin: auto;\n    border-radius: 10px;\n    padding: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  #navbar a {\n    text-decoration: none;\n    margin: 0px 15px 0px 0px;\n  }\n</style>\n\n<script>\n  import Dropdown from './Dropdown.svelte';\n  import Router, { link } from 'svelte-spa-router';\n  import active from 'svelte-spa-router/active';\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n  import { showNavbar } from '../store/showNavbar.js';\n\n  let savedInfo = {};\n\n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n      savedInfo = value;\n    });\n\n    const unsubscribeshowNavbar = showNavbar.subscribe((value) => {\n    })\n    \n    //\n    // Set the default theme.\n    //\n    changeTheme(savedInfo.styles.theme);\n\n    return () => { unsubscribeshowNavbar(); unsubscribeInfo(); };\n  });\n\n  function hoverAction(e) {\n    switch(e.type) {\n      case 'mouseover':\n        e.target.style.color = savedInfo.styles.navHoverColor;\n        break;\n      case 'mouseout':\n        e.target.style.color = savedInfo.styles.textColor;\n        break;\n    }\n  }\n\n  function changeTheme(newTheme) {\n    var newInfo = {...savedInfo};\n    switch(newTheme) {\n      case 'light':\n        newInfo.styles.backgroundColor= '#F8F8F2',\n        newInfo.styles.backgroundPicture= '',\n        newInfo.styles.borderColor= '#F8F8F2',\n        newInfo.styles.divColor= '#F8F8F2',\n        newInfo.styles.divBackgroundPicture= '',\n        newInfo.styles.borderSize= '5px',\n        newInfo.styles.borderRadius= '10px',\n        newInfo.styles.textColor= 'black',\n        newInfo.styles.font= '20px Times New Romand, Arial',\n        newInfo.styles.headerFont= '20px Verdana, Arial',\n        newInfo.styles.navFontSize= '26px',\n        newInfo.styles.navHoverColor = 'blue',\n        newInfo.styles.showSideBar= false,\n        newInfo.styles.sideBarLeft= false,\n        newInfo.styles.widthLogo= 920,\n        newInfo.styles.widthNavbar= 700,\n        newInfo.styles.widthSidebar= 900\n        break;\n\n      case 'dark':\n        newInfo.styles.backgroundColor= '#282B35',\n        newInfo.styles.backgroundPicture= '',\n        newInfo.styles.borderColor= '#282B35',\n        newInfo.styles.divColor= '#282B35',\n        newInfo.styles.divBackgroundPicture= '',\n        newInfo.styles.borderSize= '5px',\n        newInfo.styles.borderRadius= '10px',\n        newInfo.styles.textColor= '#F8F8F2',\n        newInfo.styles.font= '20px Times New Romand, Arial',\n        newInfo.styles.headerFont= '20px Verdana, Arial',\n        newInfo.styles.navFontSize= '24px',\n        newInfo.styles.navHoverColor = 'blue',\n        newInfo.styles.showSideBar= true,\n        newInfo.styles.sideBarLeft= false,\n        newInfo.styles.widthLogo= 920,\n        newInfo.styles.widthNavbar= 700,\n        newInfo.styles.widthSidebar= 900\n        break;\n\n      case 'brown':\n        newInfo.styles.backgroundColor= '#D1BD79',\n        newInfo.styles.backgroundPicture= '',\n        newInfo.styles.borderColor= '#AA7942',\n        newInfo.styles.divColor= '#ECDAAC',\n        newInfo.styles.divBackgroundPicture= '',\n        newInfo.styles.borderSize= '5px',\n        newInfo.styles.borderRadius= '10px',\n        newInfo.styles.textColor= 'black',\n        newInfo.styles.font= '20px Times New Romand, Arial',\n        newInfo.styles.headerFont= '20px Verdana, Arial',\n        newInfo.styles.navFontSize= '24px',\n        newInfo.styles.navHoverColor = 'blue',\n        newInfo.styles.showSideBar= true,\n        newInfo.styles.sideBarLeft= false,\n        newInfo.styles.widthLogo= 920,\n        newInfo.styles.widthNavbar= 700,\n        newInfo.styles.widthSidebar= 900\n        break;\n    }\n    info.set(newInfo);\n  }\n</script>\n\n",
    "<footer style=\"background-color: {$info.styles.divColor}; \n               background-image: {$info.styles.divBackgroundPicture}; \n               border: {$info.styles.borderSize} solid {$info.styles.borderColor};\n               border-radius: {$info.styles.borderRadius};\n               color: {$info.styles.textColor};\">\n  <div id='leftBox'>\n    <p>Created using <a href='https://github.com/raguay/SvelteGithubSiteTemplate'>SvelteWeb</a></p>\n    <p>Copyrighted by Richard Guay</p>\n  </div>\n</footer>\n\n<style>\n  footer {\n    width: 85%;\n    margin: auto;\n    padding: 10px;\n  }\n\n  #leftBox {\n    float: left;\n    display: flex;\n    flex-direction: column;\n  }\n\n  #leftBox p {\n    margin: 0px;\n    padding: 0px;\n  }\n\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n</script>\n\n",
    "<div id='blog' style=\"background-color: {$info.styles.divColor}; \n                      background-image: {$info.styles.divBackgroundPicture}; \n                      color: {$info.styles.textColor};\">\n  <h4>Blog Links</h4>\n  <a href='/#/blog/my-first-post'>My First Post</a>\n</div>\n\n<style>\n  #blog {\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    align-content: left;\n    margin: 10px 0px 10px 0px;\n  }\n\n  #blog h4 {\n    margin: auto;\n    padding: 5px 0px 10px 0px;\n  }\n\n  #blog a {\n    text-decoration: none;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n \n  onMount(() => {\n    //\n    // Subscribe to the information store to get the site information.\n    //\n    const unsubscribeInfo = info.subscribe((value) => {\n    });\n\n    return () => { unsubscribeInfo(); };\n  });\n\n</script>\n\n",
    "<div id='dropdown' style=\"height: {setHeight};\" on:mouseover={divHoverAction} on:mouseout={divHoverAction} > \n  <a href='/#' style=\"color: {$info.styles.textColor};\" on:mouseover={hoverAction} on:mouseout={hoverAction} on:click|preventDefault={(e) => {}}>{name}</a>\n  <slot></slot>\n</div>\n\n<style>\n  #dropdown {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  }\n\n  #dropdown a:first-child {\n    margin-bottom: 10px;\n    text-decoration: none;\n  }\n</style>\n\n<script>\n  import { onMount } from 'svelte';\n  import { info } from '../store/infoStore.js';\n\n  export let name = '';\n  \n  let savedInfo = {};\n  let maxHeight = 0;\n  let setHeight = \"100%\";\n  let newSave = false;\n\n  function divHoverAction(e) {\n    switch(e.type) {\n      case 'mouseover':\n        setHeight = (maxHeight === 0)||newSave ? '100%' : maxHeight.toString() + 'px';\n        break;\n      case 'mouseout':\n        if(maxHeight === 0) {\n          maxHeight = e.target.parentNode.clientHeight;\n        } else {\n          if(newSave) maxHeight = 0;\n        }\n        setHeight = savedInfo.styles.navFontSize;\n        break;\n    }\n  }\n\n  function hoverAction(e) {\n    switch(e.type) {\n      case 'mouseover':\n        e.target.style.color = savedInfo.styles.navHoverColor;\n        break;\n      case 'mouseout':\n        e.target.style.color = savedInfo.styles.textColor;\n        break;\n    }\n  }\n\n\n  onMount(() => {\n    const unsubscribeInfo = info.subscribe((value) => {\n      savedInfo = value;\n      setHeight = value.styles.navFontSize;\n      if(maxHeight !== 0) newSave = true;\n    });\n    return () => { unsubscribeInfo(); };\n  });\n</script>\n\n"
  ],
  "names": [],
  "mappings": "AAyCU,IAAI,AAAE,CAAC,AACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,AACd,CAAC,AAEO,QAAQ,AAAE,CAAC,AACjB,KAAK,CAAE,OAAO,CAAC,UAAU,CACzB,qBAAqB,CAAE,OAAO,CAAC,UAAU,AAC3C,CAAC,AAED,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,AAChB,CAAC,AAOD,OAAO,eAAC,CAAC,AACP,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,CAAC,AACjB,CAAC,AAOA,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,AACf,CAAC;ACpEA,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC;ACYD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CAAC,GAAG,CAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,CAAC,AAChB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,AACd,CAAC;ACpCD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC;AC/BD,GAAG,eAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,CAAC,CACd,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACf,CAAC;ACmBD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC;ACpBD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,sBAAO,CAAC,CAAC,eAAC,CAAC,AACT,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,AAC1B,CAAC;ACjBD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,sBAAQ,CAAC,CAAC,cAAC,CAAC,AACV,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,AACd,CAAC;ACnBD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,AAC3B,CAAC,AAED,oBAAK,CAAC,EAAE,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,AAC3B,CAAC,AAED,oBAAK,CAAC,CAAC,eAAC,CAAC,AACP,eAAe,CAAE,IAAI,AACvB,CAAC;ACjBD,SAAS,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,uBAAS,CAAC,eAAC,YAAY,AAAC,CAAC,AACvB,aAAa,CAAE,IAAI,CACnB,eAAe,CAAE,IAAI,AACvB,CAAC"
}